{
  "{\"assumptions\":{},\"sourceRoot\":\"/home/mohit/Documents/REACTJS/practice-website/my-blog-backend/src/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/mohit/Documents/REACTJS/practice-website/my-blog-backend\",\"filename\":\"/home/mohit/Documents/REACTJS/practice-website/my-blog-backend/src/server.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/mohit/Documents/REACTJS/practice-website/my-blog-backend\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-private-methods\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":true,\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.14.6": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "/home/mohit/Documents/REACTJS/practice-website/my-blog-backend/src/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/mohit/Documents/REACTJS/practice-website/my-blog-backend",
      "filename": "/home/mohit/Documents/REACTJS/practice-website/my-blog-backend/src/server.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "/home/mohit/Documents/REACTJS/practice-website/my-blog-backend",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-private-methods",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": true,
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/mohit/Documents/REACTJS/practice-website/my-blog-backend/src/server.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          "classPrivateMethods",
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/mohit/Documents/REACTJS/practice-website/my-blog-backend/src/server.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/mohit/Documents/REACTJS/practice-website/my-blog-backend/src/",
        "sourceFileName": "server.js",
        "jsescOption": {
          "minimal": false
        }
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar _bodyParser = _interopRequireDefault(require(\"body-parser\"));\n\nvar _mongodb = require(\"mongodb\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nvar app = (0, _express[\"default\"])();\n\nfunction maxi(a, b) {\n  if (a >= b) return a;else return b;\n}\n\napp.use(_bodyParser[\"default\"].json());\n\nvar withDB = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(operations, res) {\n    var client, db;\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _mongodb.MongoClient.connect(\"mongodb://localhost:27017\", {\n              useNewUrlParser: true\n            }, {\n              useUnifiedTopology: true\n            });\n\n          case 3:\n            client = _context.sent;\n            db = client.db(\"my-blog\");\n            _context.next = 7;\n            return operations(db);\n\n          case 7:\n            client.close();\n            _context.next = 13;\n            break;\n\n          case 10:\n            _context.prev = 10;\n            _context.t0 = _context[\"catch\"](0);\n            res.status(500).json({\n              message: \"Error connecting to db\",\n              error: _context.t0\n            });\n\n          case 13:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[0, 10]]);\n  }));\n\n  return function withDB(_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}(); //connecting with local mongo database\n\n\napp.get(\"/api/articles/:name\", /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(req, res) {\n    return regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            withDB( /*#__PURE__*/function () {\n              var _ref3 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(db) {\n                var articleName, articleInfo;\n                return regeneratorRuntime.wrap(function _callee2$(_context2) {\n                  while (1) {\n                    switch (_context2.prev = _context2.next) {\n                      case 0:\n                        articleName = req.params.name;\n                        _context2.next = 3;\n                        return db.collection(\"articles\").findOne({\n                          name: articleName\n                        });\n\n                      case 3:\n                        articleInfo = _context2.sent;\n                        res.status(200).json(articleInfo);\n\n                      case 5:\n                      case \"end\":\n                        return _context2.stop();\n                    }\n                  }\n                }, _callee2);\n              }));\n\n              return function (_x5) {\n                return _ref3.apply(this, arguments);\n              };\n            }(), res);\n\n          case 1:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n\n  return function (_x3, _x4) {\n    return _ref2.apply(this, arguments);\n  };\n}()); //incrementing the upvote of the articlesname given by ':name' variable in URL accessed by req.params\n//Each time a post request is made, upvote inc by 1\n\napp.post(\"/api/articles/:name/upvote\", /*#__PURE__*/function () {\n  var _ref4 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5(req, res) {\n    return regeneratorRuntime.wrap(function _callee5$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            withDB( /*#__PURE__*/function () {\n              var _ref5 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4(db) {\n                var articleName, articleInfo, updatedArticleInfo;\n                return regeneratorRuntime.wrap(function _callee4$(_context4) {\n                  while (1) {\n                    switch (_context4.prev = _context4.next) {\n                      case 0:\n                        articleName = req.params.name;\n                        _context4.next = 3;\n                        return db.collection(\"articles\").findOne({\n                          name: articleName\n                        });\n\n                      case 3:\n                        articleInfo = _context4.sent;\n                        _context4.next = 6;\n                        return db.collection(\"articles\").updateOne({\n                          name: articleName\n                        }, {\n                          $set: {\n                            upvotes: articleInfo.upvotes + 1\n                          }\n                        });\n\n                      case 6:\n                        _context4.next = 8;\n                        return db.collection(\"articles\").findOne({\n                          name: articleName\n                        });\n\n                      case 8:\n                        updatedArticleInfo = _context4.sent;\n                        res.status(200).json(updatedArticleInfo);\n\n                      case 10:\n                      case \"end\":\n                        return _context4.stop();\n                    }\n                  }\n                }, _callee4);\n              }));\n\n              return function (_x8) {\n                return _ref5.apply(this, arguments);\n              };\n            }(), res);\n\n          case 1:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, _callee5);\n  }));\n\n  return function (_x6, _x7) {\n    return _ref4.apply(this, arguments);\n  };\n}());\napp.post(\"/api/articles/:name/downvote\", /*#__PURE__*/function () {\n  var _ref6 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee7(req, res) {\n    return regeneratorRuntime.wrap(function _callee7$(_context7) {\n      while (1) {\n        switch (_context7.prev = _context7.next) {\n          case 0:\n            withDB( /*#__PURE__*/function () {\n              var _ref7 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee6(db) {\n                var articleName, articleInfo, updatedArticleInfo;\n                return regeneratorRuntime.wrap(function _callee6$(_context6) {\n                  while (1) {\n                    switch (_context6.prev = _context6.next) {\n                      case 0:\n                        articleName = req.params.name;\n                        _context6.next = 3;\n                        return db.collection(\"articles\").findOne({\n                          name: articleName\n                        });\n\n                      case 3:\n                        articleInfo = _context6.sent;\n                        _context6.next = 6;\n                        return db.collection(\"articles\").updateOne({\n                          name: articleName\n                        }, {\n                          $set: {\n                            upvotes: articleInfo.upvotes - 1\n                          }\n                        });\n\n                      case 6:\n                        articleInfo.upvotes = maxi(0, articleInfo.upvotes);\n                        _context6.next = 9;\n                        return db.collection(\"articles\").findOne({\n                          name: articleName\n                        });\n\n                      case 9:\n                        updatedArticleInfo = _context6.sent;\n                        res.status(200).json(updatedArticleInfo);\n\n                      case 11:\n                      case \"end\":\n                        return _context6.stop();\n                    }\n                  }\n                }, _callee6);\n              }));\n\n              return function (_x11) {\n                return _ref7.apply(this, arguments);\n              };\n            }(), res);\n\n          case 1:\n          case \"end\":\n            return _context7.stop();\n        }\n      }\n    }, _callee7);\n  }));\n\n  return function (_x9, _x10) {\n    return _ref6.apply(this, arguments);\n  };\n}()); //api to get a comment\n\napp.get(\"/api/articles/:name/get-comment\", /*#__PURE__*/function () {\n  var _ref8 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee9(req, res) {\n    var articleName, commentIndex;\n    return regeneratorRuntime.wrap(function _callee9$(_context9) {\n      while (1) {\n        switch (_context9.prev = _context9.next) {\n          case 0:\n            articleName = req.params.name;\n            commentIndex = req.query.q; //console.log(\"cindex - \"+commentIndex);\n\n            withDB( /*#__PURE__*/function () {\n              var _ref9 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee8(db) {\n                var articleInfo, articleAllComment, articleSpecificComment;\n                return regeneratorRuntime.wrap(function _callee8$(_context8) {\n                  while (1) {\n                    switch (_context8.prev = _context8.next) {\n                      case 0:\n                        _context8.next = 2;\n                        return db.collection(\"articles\").findOne({\n                          name: articleName\n                        });\n\n                      case 2:\n                        articleInfo = _context8.sent;\n\n                        if (!commentIndex) {\n                          articleAllComment = articleInfo.comments;\n                          res.status(200).send(articleAllComment);\n                        } else {\n                          articleSpecificComment = articleInfo.comments[commentIndex]; //console.log(articleSpecificComment.username);\n\n                          res.status(200).send(articleSpecificComment);\n                        }\n\n                      case 4:\n                      case \"end\":\n                        return _context8.stop();\n                    }\n                  }\n                }, _callee8);\n              }));\n\n              return function (_x14) {\n                return _ref9.apply(this, arguments);\n              };\n            }(), res);\n\n          case 3:\n          case \"end\":\n            return _context9.stop();\n        }\n      }\n    }, _callee9);\n  }));\n\n  return function (_x12, _x13) {\n    return _ref8.apply(this, arguments);\n  };\n}());\napp.post(\"/api/articles/:name/add-comment\", function (req, res) {\n  var _req$body = req.body,\n      username = _req$body.username,\n      text = _req$body.text;\n  var articleName = req.params.name;\n  withDB( /*#__PURE__*/function () {\n    var _ref10 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee10(db) {\n      var articleInfo, updatedArticleInfo;\n      return regeneratorRuntime.wrap(function _callee10$(_context10) {\n        while (1) {\n          switch (_context10.prev = _context10.next) {\n            case 0:\n              _context10.next = 2;\n              return db.collection(\"articles\").findOne({\n                name: articleName\n              });\n\n            case 2:\n              articleInfo = _context10.sent;\n              _context10.next = 5;\n              return db.collection(\"articles\").updateOne({\n                name: articleName\n              }, {\n                $set: {\n                  comments: articleInfo.comments.concat({\n                    username: username,\n                    text: text\n                  })\n                }\n              });\n\n            case 5:\n              _context10.next = 7;\n              return db.collection(\"articles\").findOne({\n                name: articleName\n              });\n\n            case 7:\n              updatedArticleInfo = _context10.sent;\n              res.status(200).json(updatedArticleInfo);\n\n            case 9:\n            case \"end\":\n              return _context10.stop();\n          }\n        }\n      }, _callee10);\n    }));\n\n    return function (_x15) {\n      return _ref10.apply(this, arguments);\n    };\n  }(), res);\n}); // app.put('/api/articles/:name/update-comment', (req,res)=> {\n//     const {updateText} = req.body;\n//     const articleName = req.params.name;\n//     withDB(async (db) => {\n//         const articleInfo = await db.collection('articles').findOne({name:articleName});\n//         await db.collection('articles').updateOne({name:username}, {\n//             '$set' : {\n//\n//             }\n//         })\n//     })\n// })\n// app.delete(\"/api/articles/:name/delete-comment\", (req, res) => {\n//   const articleName = req.params.name;\n//   const commentIndex = req.query.q;\n//   withDB(async (db) => {\n//     try {\n//       const articleInfo = await db.collection('articles').findOne({ name: articleName });\n//       let articleAllComment = articleInfo.comments;\n//       console.log(\"before =\", articleAllComment)\n//       const commentToBeDeleted = articleInfo.comments[commentIndex];\n//       const username = commentToBeDeleted.username;\n//       console.log(username)\n//       await db.collection('articles').updateOne(\n//         {name:articleName},\n//         {\n//           $filter: {\n//             input : '$comments',\n//             as :\"comment\",\n//             cond: { $ne: [ \"$comments.username\", username ] }\n//           },\n//         }\n//       )\n//       console.log(\"after - \", articleAllComment);\n//       //yaha per index chahiye per kaise milega pta nhi?\n//       //articleInfo.comments = gives artcle commet\n//       res.status(200).send(articleAllComment);\n//     }\n//     catch (err) {\n//       res.status(500).send(\"Error occured\")\n//     }\n//   }, res);\n// });\n\napp.listen(8000, function () {\n  return console.log(\"Listening to the port 8000\");\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "server.js"
      ],
      "names": [
        "app",
        "maxi",
        "a",
        "b",
        "use",
        "bodyParser",
        "json",
        "withDB",
        "operations",
        "res",
        "MongoClient",
        "connect",
        "useNewUrlParser",
        "useUnifiedTopology",
        "client",
        "db",
        "close",
        "status",
        "message",
        "error",
        "get",
        "req",
        "articleName",
        "params",
        "name",
        "collection",
        "findOne",
        "articleInfo",
        "post",
        "updateOne",
        "$set",
        "upvotes",
        "updatedArticleInfo",
        "commentIndex",
        "query",
        "q",
        "articleAllComment",
        "comments",
        "send",
        "articleSpecificComment",
        "body",
        "username",
        "text",
        "concat",
        "listen",
        "console",
        "log"
      ],
      "mappings": ";;AAAA;;AACA;;AACA;;;;;;;;AAEA,IAAMA,GAAG,GAAG,0BAAZ;;AAEA,SAASC,IAAT,CAAcC,CAAd,EAAiBC,CAAjB,EAAoB;AAClB,MAAID,CAAC,IAAIC,CAAT,EAAY,OAAOD,CAAP,CAAZ,KACK,OAAOC,CAAP;AACN;;AAEDH,GAAG,CAACI,GAAJ,CAAQC,uBAAWC,IAAX,EAAR;;AAEA,IAAMC,MAAM;AAAA,qEAAG,iBAAOC,UAAP,EAAmBC,GAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAEUC,qBAAYC,OAAZ,CACnB,2BADmB,EAEnB;AAAEC,cAAAA,eAAe,EAAE;AAAnB,aAFmB,EAGnB;AAAEC,cAAAA,kBAAkB,EAAE;AAAtB,aAHmB,CAFV;;AAAA;AAELC,YAAAA,MAFK;AAOLC,YAAAA,EAPK,GAOAD,MAAM,CAACC,EAAP,CAAU,SAAV,CAPA;AAAA;AAAA,mBASLP,UAAU,CAACO,EAAD,CATL;;AAAA;AAWXD,YAAAA,MAAM,CAACE,KAAP;AAXW;AAAA;;AAAA;AAAA;AAAA;AAaXP,YAAAA,GAAG,CAACQ,MAAJ,CAAW,GAAX,EAAgBX,IAAhB,CAAqB;AAAEY,cAAAA,OAAO,EAAE,wBAAX;AAAqCC,cAAAA,KAAK;AAA1C,aAArB;;AAbW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAANZ,MAAM;AAAA;AAAA;AAAA,GAAZ,C,CAiBA;;;AACAP,GAAG,CAACoB,GAAJ,CAAQ,qBAAR;AAAA,sEAA+B,kBAAOC,GAAP,EAAYZ,GAAZ;AAAA;AAAA;AAAA;AAAA;AAC7BF,YAAAA,MAAM;AAAA,kFAAC,kBAAOQ,EAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AACCO,wBAAAA,WADD,GACeD,GAAG,CAACE,MAAJ,CAAWC,IAD1B;AAAA;AAAA,+BAGqBT,EAAE,CACzBU,UADuB,CACZ,UADY,EAEvBC,OAFuB,CAEf;AAAEF,0BAAAA,IAAI,EAAEF;AAAR,yBAFe,CAHrB;;AAAA;AAGCK,wBAAAA,WAHD;AAMLlB,wBAAAA,GAAG,CAACQ,MAAJ,CAAW,GAAX,EAAgBX,IAAhB,CAAqBqB,WAArB;;AANK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAD;;AAAA;AAAA;AAAA;AAAA,iBAOHlB,GAPG,CAAN;;AAD6B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA/B;;AAAA;AAAA;AAAA;AAAA,K,CAWA;AACA;;AACAT,GAAG,CAAC4B,IAAJ,CAAS,4BAAT;AAAA,sEAAuC,kBAAOP,GAAP,EAAYZ,GAAZ;AAAA;AAAA;AAAA;AAAA;AACrCF,YAAAA,MAAM;AAAA,kFAAC,kBAAOQ,EAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AACCO,wBAAAA,WADD,GACeD,GAAG,CAACE,MAAJ,CAAWC,IAD1B;AAAA;AAAA,+BAGqBT,EAAE,CACzBU,UADuB,CACZ,UADY,EAEvBC,OAFuB,CAEf;AAAEF,0BAAAA,IAAI,EAAEF;AAAR,yBAFe,CAHrB;;AAAA;AAGCK,wBAAAA,WAHD;AAAA;AAAA,+BAOCZ,EAAE,CAACU,UAAH,CAAc,UAAd,EAA0BI,SAA1B,CACJ;AAAEL,0BAAAA,IAAI,EAAEF;AAAR,yBADI,EAEJ;AACEQ,0BAAAA,IAAI,EAAE;AACJC,4BAAAA,OAAO,EAAEJ,WAAW,CAACI,OAAZ,GAAsB;AAD3B;AADR,yBAFI,CAPD;;AAAA;AAAA;AAAA,+BAgB4BhB,EAAE,CAChCU,UAD8B,CACnB,UADmB,EAE9BC,OAF8B,CAEtB;AAAEF,0BAAAA,IAAI,EAAEF;AAAR,yBAFsB,CAhB5B;;AAAA;AAgBCU,wBAAAA,kBAhBD;AAoBLvB,wBAAAA,GAAG,CAACQ,MAAJ,CAAW,GAAX,EAAgBX,IAAhB,CAAqB0B,kBAArB;;AApBK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAD;;AAAA;AAAA;AAAA;AAAA,iBAqBHvB,GArBG,CAAN;;AADqC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAvC;;AAAA;AAAA;AAAA;AAAA;AAyBAT,GAAG,CAAC4B,IAAJ,CAAS,8BAAT;AAAA,sEAAyC,kBAAOP,GAAP,EAAYZ,GAAZ;AAAA;AAAA;AAAA;AAAA;AACvCF,YAAAA,MAAM;AAAA,kFAAC,kBAAOQ,EAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AACCO,wBAAAA,WADD,GACeD,GAAG,CAACE,MAAJ,CAAWC,IAD1B;AAAA;AAAA,+BAEqBT,EAAE,CACzBU,UADuB,CACZ,UADY,EAEvBC,OAFuB,CAEf;AAAEF,0BAAAA,IAAI,EAAEF;AAAR,yBAFe,CAFrB;;AAAA;AAECK,wBAAAA,WAFD;AAAA;AAAA,+BAMCZ,EAAE,CAACU,UAAH,CAAc,UAAd,EAA0BI,SAA1B,CACJ;AAAEL,0BAAAA,IAAI,EAAEF;AAAR,yBADI,EAEJ;AACEQ,0BAAAA,IAAI,EAAE;AACJC,4BAAAA,OAAO,EAAEJ,WAAW,CAACI,OAAZ,GAAsB;AAD3B;AADR,yBAFI,CAND;;AAAA;AAeLJ,wBAAAA,WAAW,CAACI,OAAZ,GAAsB9B,IAAI,CAAC,CAAD,EAAI0B,WAAW,CAACI,OAAhB,CAA1B;AAfK;AAAA,+BAiB4BhB,EAAE,CAChCU,UAD8B,CACnB,UADmB,EAE9BC,OAF8B,CAEtB;AAAEF,0BAAAA,IAAI,EAAEF;AAAR,yBAFsB,CAjB5B;;AAAA;AAiBCU,wBAAAA,kBAjBD;AAqBLvB,wBAAAA,GAAG,CAACQ,MAAJ,CAAW,GAAX,EAAgBX,IAAhB,CAAqB0B,kBAArB;;AArBK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAD;;AAAA;AAAA;AAAA;AAAA,iBAsBHvB,GAtBG,CAAN;;AADuC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAzC;;AAAA;AAAA;AAAA;AAAA,K,CA0BA;;AACAT,GAAG,CAACoB,GAAJ,CAAQ,iCAAR;AAAA,sEAA2C,kBAAOC,GAAP,EAAYZ,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AACnCa,YAAAA,WADmC,GACrBD,GAAG,CAACE,MAAJ,CAAWC,IADU;AAEnCS,YAAAA,YAFmC,GAEpBZ,GAAG,CAACa,KAAJ,CAAUC,CAFU,EAGzC;;AAEA5B,YAAAA,MAAM;AAAA,kFAAC,kBAAOQ,EAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BACqBA,EAAE,CAACU,UAAH,CAAc,UAAd,EAA0BC,OAA1B,CAAkC;AAAEF,0BAAAA,IAAI,EAAEF;AAAR,yBAAlC,CADrB;;AAAA;AACCK,wBAAAA,WADD;;AAEL,4BAAI,CAACM,YAAL,EAAmB;AACXG,0BAAAA,iBADW,GACST,WAAW,CAACU,QADrB;AAEjB5B,0BAAAA,GAAG,CAACQ,MAAJ,CAAW,GAAX,EAAgBqB,IAAhB,CAAqBF,iBAArB;AACD,yBAHD,MAIK;AACGG,0BAAAA,sBADH,GAC4BZ,WAAW,CAACU,QAAZ,CAAqBJ,YAArB,CAD5B,EAEH;;AACAxB,0BAAAA,GAAG,CAACQ,MAAJ,CAAW,GAAX,EAAgBqB,IAAhB,CAAqBC,sBAArB;AACD;;AAVI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAD;;AAAA;AAAA;AAAA;AAAA,iBAWH9B,GAXG,CAAN;;AALyC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA3C;;AAAA;AAAA;AAAA;AAAA;AAsBAT,GAAG,CAAC4B,IAAJ,CAAS,iCAAT,EAA4C,UAACP,GAAD,EAAMZ,GAAN,EAAc;AACxD,kBAA2BY,GAAG,CAACmB,IAA/B;AAAA,MAAQC,QAAR,aAAQA,QAAR;AAAA,MAAkBC,IAAlB,aAAkBA,IAAlB;AACA,MAAMpB,WAAW,GAAGD,GAAG,CAACE,MAAJ,CAAWC,IAA/B;AAEAjB,EAAAA,MAAM;AAAA,yEAAC,mBAAOQ,EAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACqBA,EAAE,CACzBU,UADuB,CACZ,UADY,EAEvBC,OAFuB,CAEf;AAAEF,gBAAAA,IAAI,EAAEF;AAAR,eAFe,CADrB;;AAAA;AACCK,cAAAA,WADD;AAAA;AAAA,qBAMCZ,EAAE,CAACU,UAAH,CAAc,UAAd,EAA0BI,SAA1B,CACJ;AAAEL,gBAAAA,IAAI,EAAEF;AAAR,eADI,EAEJ;AACEQ,gBAAAA,IAAI,EAAE;AACJO,kBAAAA,QAAQ,EAAEV,WAAW,CAACU,QAAZ,CAAqBM,MAArB,CAA4B;AAAEF,oBAAAA,QAAQ,EAARA,QAAF;AAAYC,oBAAAA,IAAI,EAAJA;AAAZ,mBAA5B;AADN;AADR,eAFI,CAND;;AAAA;AAAA;AAAA,qBAc4B3B,EAAE,CAChCU,UAD8B,CACnB,UADmB,EAE9BC,OAF8B,CAEtB;AAAEF,gBAAAA,IAAI,EAAEF;AAAR,eAFsB,CAd5B;;AAAA;AAcCU,cAAAA,kBAdD;AAkBLvB,cAAAA,GAAG,CAACQ,MAAJ,CAAW,GAAX,EAAgBX,IAAhB,CAAqB0B,kBAArB;;AAlBK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAD;;AAAA;AAAA;AAAA;AAAA,OAmBHvB,GAnBG,CAAN;AAoBD,CAxBD,E,CA0BA;AAEA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAEAT,GAAG,CAAC4C,MAAJ,CAAW,IAAX,EAAiB;AAAA,SAAMC,OAAO,CAACC,GAAR,CAAY,4BAAZ,CAAN;AAAA,CAAjB",
      "sourceRoot": "/home/mohit/Documents/REACTJS/practice-website/my-blog-backend/src/",
      "sourcesContent": [
        "import express from \"express\";\nimport bodyParser from \"body-parser\";\nimport { MongoClient } from \"mongodb\";\n\nconst app = express();\n\nfunction maxi(a, b) {\n  if (a >= b) return a;\n  else return b;\n}\n\napp.use(bodyParser.json());\n\nconst withDB = async (operations, res) => {\n  try {\n    const client = await MongoClient.connect(\n      \"mongodb://localhost:27017\",\n      { useNewUrlParser: true },\n      { useUnifiedTopology: true }\n    );\n    const db = client.db(\"my-blog\");\n\n    await operations(db);\n\n    client.close();\n  } catch (error) {\n    res.status(500).json({ message: \"Error connecting to db\", error });\n  }\n};\n\n//connecting with local mongo database\napp.get(\"/api/articles/:name\", async (req, res) => {\n  withDB(async (db) => {\n    const articleName = req.params.name;\n\n    const articleInfo = await db\n      .collection(\"articles\")\n      .findOne({ name: articleName });\n    res.status(200).json(articleInfo);\n  }, res);\n});\n\n//incrementing the upvote of the articlesname given by ':name' variable in URL accessed by req.params\n//Each time a post request is made, upvote inc by 1\napp.post(\"/api/articles/:name/upvote\", async (req, res) => {\n  withDB(async (db) => {\n    const articleName = req.params.name;\n\n    const articleInfo = await db\n      .collection(\"articles\")\n      .findOne({ name: articleName });\n    //query for incrementing vote\n    await db.collection(\"articles\").updateOne(\n      { name: articleName },\n      {\n        $set: {\n          upvotes: articleInfo.upvotes + 1,\n        },\n      }\n    );\n\n    const updatedArticleInfo = await db\n      .collection(\"articles\")\n      .findOne({ name: articleName });\n\n    res.status(200).json(updatedArticleInfo);\n  }, res);\n});\n\napp.post(\"/api/articles/:name/downvote\", async (req, res) => {\n  withDB(async (db) => {\n    const articleName = req.params.name;\n    const articleInfo = await db\n      .collection(\"articles\")\n      .findOne({ name: articleName });\n\n    await db.collection(\"articles\").updateOne(\n      { name: articleName },\n      {\n        $set: {\n          upvotes: articleInfo.upvotes - 1,\n        },\n      }\n    );\n\n    articleInfo.upvotes = maxi(0, articleInfo.upvotes);\n\n    const updatedArticleInfo = await db\n      .collection(\"articles\")\n      .findOne({ name: articleName });\n\n    res.status(200).json(updatedArticleInfo);\n  }, res);\n});\n\n//api to get a comment\napp.get(\"/api/articles/:name/get-comment\", async (req, res) => {\n  const articleName = req.params.name;\n  const commentIndex = req.query.q;\n  //console.log(\"cindex - \"+commentIndex);\n\n  withDB(async (db) => {\n    const articleInfo = await db.collection(\"articles\").findOne({ name: articleName })\n    if (!commentIndex) {\n      const articleAllComment = articleInfo.comments;\n      res.status(200).send(articleAllComment);\n    }\n    else {\n      const articleSpecificComment = articleInfo.comments[commentIndex];\n      //console.log(articleSpecificComment.username);\n      res.status(200).send(articleSpecificComment);\n    }\n  }, res);\n\n});\n\n\n\napp.post(\"/api/articles/:name/add-comment\", (req, res) => {\n  const { username, text } = req.body;\n  const articleName = req.params.name;\n\n  withDB(async (db) => {\n    const articleInfo = await db\n      .collection(\"articles\")\n      .findOne({ name: articleName });\n\n    //query for adding comment\n    await db.collection(\"articles\").updateOne(\n      { name: articleName },\n      {\n        $set: {\n          comments: articleInfo.comments.concat({ username, text }),\n        },\n      }\n    );\n    const updatedArticleInfo = await db\n      .collection(\"articles\")\n      .findOne({ name: articleName });\n\n    res.status(200).json(updatedArticleInfo);\n  }, res);\n});\n\n// app.put('/api/articles/:name/update-comment', (req,res)=> {\n\n//     const {updateText} = req.body;\n//     const articleName = req.params.name;\n\n//     withDB(async (db) => {\n\n//         const articleInfo = await db.collection('articles').findOne({name:articleName});\n\n//         await db.collection('articles').updateOne({name:username}, {\n//             '$set' : {\n//\n//             }\n//         })\n//     })\n// })\n\n// app.delete(\"/api/articles/:name/delete-comment\", (req, res) => {\n//   const articleName = req.params.name;\n//   const commentIndex = req.query.q;\n\n//   withDB(async (db) => {\n//     try {\n//       const articleInfo = await db.collection('articles').findOne({ name: articleName });\n//       let articleAllComment = articleInfo.comments;\n//       console.log(\"before =\", articleAllComment)\n//       const commentToBeDeleted = articleInfo.comments[commentIndex];\n//       const username = commentToBeDeleted.username;\n//       console.log(username)\n//       await db.collection('articles').updateOne(\n//         {name:articleName},\n//         {\n//           $filter: {\n//             input : '$comments',\n//             as :\"comment\",\n//             cond: { $ne: [ \"$comments.username\", username ] }\n//           },\n//         }\n//       )\n\n//       console.log(\"after - \", articleAllComment);\n//       //yaha per index chahiye per kaise milega pta nhi?\n//       //articleInfo.comments = gives artcle commet\n//       res.status(200).send(articleAllComment);\n//     }\n//     catch (err) {\n//       res.status(500).send(\"Error occured\")\n//     }\n//   }, res);\n\n// });\n\napp.listen(8000, () => console.log(\"Listening to the port 8000\"));\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1634085061426
  }
}